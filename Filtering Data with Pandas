1.Filter dataframe based on one condition

import pandas as pd

# Sample dataset
data = {
    "Company": ["Apple", "Dell", "Apple", "HP", "Apple", "Lenovo"],
    "Price_euros": [2500, 1500, 3000, 1200, 1800, 1000]
}

# Create DataFrame
df_laptops = pd.DataFrame(data)

# Filter Apple laptops
apple_laptops = df_laptops[df_laptops['Company'] == "Apple"]

# Print result
print(apple_laptops)

# Count how many Apple laptops
print(apple_laptops['Company'].value_counts())



Exercise

1.1  # Boolean mask (True if not HP, False if HP)
df_laptops['Company'] != "HP"

# Filter dataframe
df_laptops[df_laptops['Company'] != "HP"]

df_laptops[df_laptops['Company'] != "HP"]['Company'].value_counts()


1.2 # Boolean mask
df_laptops['Price_euros'] > 2000

# Filter dataframe
df_laptops[df_laptops['Price_euros'] > 2000]


1.3. Create column based on a condition
import pandas as pd
import numpy as np

# Sample data
data = {
    "Laptop": ["A", "B", "C", "D", "E"],
    "Price_euros": [500, 1500, 2500, 3000, 1200]
}

df_laptops = pd.DataFrame(data)

# Create a new column 'Price_tier' using np.where
df_laptops["Price_tier"] = np.where(df_laptops["Price_euros"] > 2000, "Expensive", "Cheap")

# Show the DataFrame
print(df_laptops)

# Count how many laptops are cheap vs expensive
print(df_laptops["Price_tier"].value_counts())

2. Filter dataframe based on multiple condition

2.1 & Add condition
# Example: Find Apple laptops that cost more than 2000 euros
df_laptops[(df_laptops['Company'] == 'Apple') & (df_laptops['Price_euros'] > 2000)]

2.2 | or condition
# Example: Find laptops that are either Apple or Dell
df_laptops[(df_laptops['Company'] == 'Apple') | (df_laptops['Company'] == 'Dell')]

